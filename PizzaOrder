package com.test;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;

public class PizzaOrder extends JFrame implements ActionListener
{
      private JLabel lblName,lblphone,lblAddress;
      private JTextField txtName,txtphone,txtAddress;
      private JCheckBox chkDelivery;
      private JList<String>lstPizzaTypes;
      private JRadioButton rbtLarge,rbtMedium,rbtSmall;
      private JButton btnOrder,btnClear;
      private JTextArea txtDisplay;

      
      // Container
      Container pane = getContentPane();
      ButtonGroup btgType = new ButtonGroup();
       
      String [] pizzaType = {"Aussie","Hawaiian","Vegetarian","Marinara","Meat Lovers","Mexicana"};
      boolean delivery = false;
      int i=0;
      String display = "";
      Customer theCustomer = new Customer();
      Pizza thePizza;
      ArrayList <Pizza> thePizzas = new ArrayList <Pizza>();
      Order theOrder;
      
      //constructor
      public PizzaOrder() 
      {
            pane.setLayout(new BorderLayout());
            
            //Heading panel
            JPanel pnlHeading = new JPanel();
            pnlHeading.setLayout(new FlowLayout(FlowLayout.CENTER,0,15));
            JLabel lblHeading  = new JLabel("MG Pizza");
            lblHeading .setFont(new Font("Arial",Font.BOLD,40));
            lblHeading .setForeground(Color.RED);
            pnlHeading.add(lblHeading);
            
            // panel order details
            JPanel pnlOrder = new JPanel();
            pnlOrder.setLayout(new GridLayout(3,1));
            
            // customer details 
            JPanel pnlCustomer = new JPanel();
            pnlCustomer.setLayout(new GridLayout(2,1));
            pnlCustomer.setBorder(BorderFactory.createTitledBorder("Customer Details"));
            
            // Customer Name 
            JPanel pnlName = new JPanel();
            pnlName.setLayout(new  FlowLayout(FlowLayout.LEFT));
            lblName = new JLabel("Customer Name:");
            txtName = new JTextField(20);
            pnlName.add(lblName);
            pnlName.add(txtName);
            
            // panel phone
            JPanel pnlPhone = new JPanel();
            pnlPhone.setLayout(new  FlowLayout(FlowLayout.LEFT));
            lblphone = new JLabel("Phone Number:");
            txtphone = new JTextField(20);
            pnlPhone.add(lblphone);
            pnlPhone.add(txtphone);
            
            // add panels to customer details 
            pnlCustomer.add(pnlName);
            pnlCustomer.add(pnlPhone);
            
            // add to order 
            pnlOrder.add(pnlCustomer);
            
            
            JPanel pnlDelivery = new JPanel();
            pnlDelivery.setLayout(new  FlowLayout(FlowLayout.LEFT));
            pnlDelivery.setBorder(BorderFactory.createTitledBorder("Delivery"));
            chkDelivery = new JCheckBox("Yes");
            lblAddress = new JLabel("Address:");
            txtAddress = new JTextField(20);
            txtAddress.setEditable(false);
            pnlDelivery.add(chkDelivery);
            pnlDelivery.add(lblAddress);
            pnlDelivery.add(txtAddress);
            
            //add delivery panel
            pnlOrder.add(pnlDelivery);
            
            // Order panel
            JPanel pnlMenu = new JPanel();
            pnlMenu.setLayout(new  FlowLayout(FlowLayout.LEFT));
            pnlMenu.setBorder(BorderFactory.createTitledBorder("Order Pizza"));
            
            lstPizzaTypes = new JList<>(pizzaType);
            rbtSmall = new JRadioButton("Small");
            rbtMedium = new JRadioButton("Medium");
            rbtLarge = new JRadioButton("Large");
            btnOrder = new JButton("Add to Order");
            btnOrder.setToolTipText("Add pizza to order");
            btnClear = new JButton("Clear");
            btnClear.setToolTipText("Clears order");
            
            
            // Group Type 
            
            btgType.add(rbtSmall);
            btgType.add(rbtMedium);
            btgType.add(rbtLarge);
            
            // add radio buttons 
            
            pnlMenu.add(lstPizzaTypes);
            pnlMenu.add(rbtSmall);
            pnlMenu.add(rbtMedium);
            pnlMenu.add(rbtLarge);
            pnlMenu.add(btnOrder);
            pnlMenu.add(btnClear);
            
            
            // add menu to order 
            pnlOrder.add(pnlMenu);
            
            
            //Display
            
            txtDisplay = new JTextArea(30,25);
            JPanel pnlDisplay = new JPanel();
            pnlDisplay.setLayout(new  FlowLayout());
            JScrollPane scroll = new JScrollPane(txtDisplay);
          scroll.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
            txtDisplay.setLineWrap(true);
            txtDisplay.setEditable(false);
            txtDisplay.setBorder(BorderFactory.createTitledBorder("Pizza Order"));
            txtDisplay .setFont(new Font("Arial",Font.BOLD,20));
            pnlDisplay.add(scroll);
            
            
            // add panels 
            
            pane.add(pnlHeading,BorderLayout.NORTH);
            pane.add(pnlOrder,BorderLayout.CENTER);
            pane.add(pnlDisplay,BorderLayout.EAST);
            
            
            //add action listeners 
            
            btnOrder.addActionListener(this);
            btnClear.addActionListener(this);
            chkDelivery.addActionListener(this);
            rbtSmall.addActionListener(this);
            rbtMedium.addActionListener(this);
            rbtLarge.addActionListener(this);
            
      }
      
      public void actionPerformed(ActionEvent e) 
      {
      
            isDelivered();
            
            if(e.getSource()==btnClear) 
            {
                  
                  clearScreen();
                  
            }
            if(e.getSource()==btnOrder) 
            {
                  String pizzaDetails = "";
                  boolean missing;
                  
                  missing = detailsMissing();
                  if (!missing) 
                  {
                        createPizzaArrayList();
                        createCustomer();
                        theOrder = new Order(theCustomer,thePizzas,delivery);
                        pizzaDetails = theOrder.toString();
                        txtDisplay.setText(pizzaDetails);
                  }
                  
            }
            
            
      }

      public void isDelivered() 
      {
            if(chkDelivery.isSelected()) 
            {
            delivery = true;
            txtAddress.setEditable(true);
            }
            else 
            {
                  delivery = false;
                  txtAddress.setEditable(false);
            }
      }
       public void     clearScreen() 
       {
             txtName.setText("");
             txtphone.setText("");
             txtAddress.setText("");
             txtDisplay.setText("");
             lstPizzaTypes.clearSelection();
             thePizzas.clear();
             theCustomer.setName("");
             theCustomer.setPhone("");
             theCustomer.setAddress("");
             btgType.clearSelection();
             chkDelivery.setSelected(false);
             txtAddress.setEditable(false);
             delivery = false ;
             thePizzas.clear();
       }
        public boolean detailsMissing()
        {
              if(txtName.getText().equalsIgnoreCase("")) 
              {
                    JOptionPane.showMessageDialog(null, " You Must Enter the name ", null,JOptionPane.ERROR_MESSAGE);
                    return true;
              }
              if(txtphone.getText().equalsIgnoreCase("")) 
              {
                    JOptionPane.showMessageDialog(null, " You Must Enter the Phone ", null,JOptionPane.ERROR_MESSAGE);
                    return true;
              
        }
              if(lstPizzaTypes.isSelectionEmpty())
              {
                    JOptionPane.showMessageDialog(null, "You Must choose pizza type ", null,JOptionPane.ERROR_MESSAGE);
                    return true; 
                    
              }

              if(!rbtSmall.isSelected() && !rbtMedium.isSelected()&& !rbtLarge.isSelected())
              {
                    JOptionPane.showMessageDialog(null, "choose a size ", null,JOptionPane.ERROR_MESSAGE);
                    return true ;
              }
              if(delivery) 
              {
                    if(txtAddress.getText().equalsIgnoreCase(""))
                    {
                          JOptionPane.showMessageDialog(null, "Enter the Address ", null,JOptionPane.ERROR_MESSAGE);
                          return true ; 
                    }
              }
                   return false ;  
              }
                  public void   createPizzaArrayList() 
                  {
                        String size= "", type="";
                        i = 0;
                        type = lstPizzaTypes.getSelectedValue();
                        if(rbtSmall.isSelected()) 
                        {
                              size = "Small";
                              
                        }
                        if(rbtMedium.isSelected()) 
                        {
                              size = "Medium";
                              
                              
                        }
                        if(rbtLarge.isSelected()) 
                        {
                              size = "Large";
                  }
                        thePizza = new Pizza(size,type);
                        thePizzas.add(i,thePizza);
                        i++;
                        
                  }
                  
                  public void createCustomer()
                  {
                        String name;
                        String phone;
                        String address;
                        
                        
                        name = txtName.getText();
                        phone = txtphone.getText();
                        if(txtAddress.getText()!=null)
                        address= txtAddress.getText();
                         
                        else
                              
                              address = "";
                        
                        theCustomer.setName(name);
                        theCustomer.setPhone(phone);
                        theCustomer.setAddress(address);
                  }
        
              } 